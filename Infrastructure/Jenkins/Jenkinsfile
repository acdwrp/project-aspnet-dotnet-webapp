pipeline {
  agent {
    node {
      label 'win'&&'slave'
      customWorkspace "workspace\\${JOB_NAME.replace("%2F", "_")}"
    }

  }
  stages {
    stage('Build') { 
      steps {

        script{
          DepolymentProperties = readJSON file: "Infrastructure/Jenkins/DeploymentConfig.json"
        }

        bat "nuget restore ${DepolymentProperties.SolutionName}"
        bat "\"${tool 'MSBuild'}\" ${DepolymentProperties.SolutionName} /p:Configuration=Release /p:Platform=\"Any CPU\" /p:ProductVersion=1.0.0.${env.BUILD_NUMBER}"
      }
    }
    stage('Test') {
      steps {
        echo 'Testing..'
      }
    }
    stage('Package Artifacts') {
      steps {
        zip(glob: DepolymentProperties.ArtifactsToPack, zipFile: DepolymentProperties.ZipPackageName)
        archiveArtifacts(artifacts: DepolymentProperties.ZipPackageName, onlyIfSuccessful: true, fingerprint: true)
      }
    }
    stage('Push to artifact storage') {
      when {
        branch 'master'
      }
      steps {

        echo "DDD"

        wnmp  "AAA"

      }
    }
    stage('Deploy to Test')
    {
        steps{
          echo "Testing"
        }
    }
    stage('Run smoke tests'){
        steps{
          echo "Testing"
        }
    }
    stage('Run API tests'){
      steps{
        echo "Testing" 
      }
    }
    stage('Run stress tests'){
      steps{
        echo "Testing"
      }
    }
  }
  environment {
    WorkspaceName = JOB_NAME.replace("%2F", "_")
    ABC = "WWW"
    DepolymentProperties = ""
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    timeout(time: 20, unit: 'MINUTES')
  }
}